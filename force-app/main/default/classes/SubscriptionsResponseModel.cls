//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.
public class SubscriptionsResponseModel {
    public class Plandetails {
        public List<Displayvalues> displayvalues {get;set;} 
        public Integer interval {get;set;} 
        public String planid {get;set;} 
        public Boolean selected {get;set;} 
        public String unit {get;set;}
        public String discountType {get;set;}
        public Double discountValue {get;set;}
        
        public Plandetails(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'displayvalues') {
                            displayvalues = arrayOfDisplayvalues(parser);
                        } else if (text == 'interval') {
                            interval = parser.getIntegerValue();
                        } else if (text == 'planid') {
                            planid = parser.getText();
                        } else if (text == 'selected') {
                            selected = parser.getBooleanValue();
                        } else if (text == 'unit') {
                            unit = parser.getText();
                        } else if (text == 'discounttype') {
                            discountType = parser.getText();
                        } else if (text == 'discountvalue') {
                            discountValue = parser.getDoubleValue();
                        } 
                        else {
                            System.debug(LoggingLevel.WARN, 'Plandetails consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public Self self {get;set;} 
    public List<Links> links {get;set;} 
    public List<Data> data {get;set;} 
    public SubscriptionsResponseModel(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'self') {
                        self = new Self(parser);
                    } else if (text == 'links') {
                        links = arrayOfLinks(parser);
                    } else if (text == 'data') {
                        data = arrayOfData(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Displayvalues {
        public String description {get;set;} 
        public String displayname {get;set;} 
        public String locale {get;set;} 
        public Displayvalues(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'description') {
                            description = parser.getText();
                        } else if (text == 'displayname') {
                            displayname = parser.getText();
                        } else if (text == 'locale') {
                            locale = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Displayvalues consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Links {
        public Links(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        {
                            System.debug(LoggingLevel.WARN, 'Links consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Billingaddress {
        public String addressid {get;set;} 
        public String addressline1 {get;set;} 
        public String addressline2 {get;set;} 
        public String city {get;set;} 
        public String country {get;set;} 
        public String name {get;set;} 
        public String organization {get;set;} 
        public String phone {get;set;} 
        public String postalcode {get;set;} 
        public String state {get;set;} 
        public Billingaddress(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'addressid') {
                            addressid = parser.getText();
                        } else if (text == 'addressline1') {
                            addressline1 = parser.getText();
                        } else if (text == 'addressline2') {
                            addressline2 = parser.getText();
                        } else if (text == 'city') {
                            city = parser.getText();
                        } else if (text == 'country') {
                            country = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'organization') {
                            organization = parser.getText();
                        } else if (text == 'phone') {
                            phone = parser.getText();
                        } else if (text == 'postalcode') {
                            postalcode = parser.getText();
                        } else if (text == 'state') {
                            state = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Billingaddress consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Data {
        public Billingaddress billingaddress {get;set;} 
        public String currencyType {get;set;} 
        public String nextdeliverydate {get;set;} 
        public String paymenttype {get;set;} 
        public List<Plandetails> plandetails {get;set;} 
        public Integer quantity {get;set;} 
        public Billingaddress shippingaddress {get;set;} 
        public String skucode {get;set;} 
        public String skudisplayname {get;set;} 
        public Integer standingorderid {get;set;} 
        public String status {get;set;}
        public String subscriptionprice {get;set;}
        public String tax {get;set;}
        public String total {get;set;}
        public Double subscriptionamount {get;set;} 
        public Double taxamount {get;set;} 
        public Double totalamount {get;set;} 
        public String storecode {get;set;}
        
        public Data(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'billingaddress') {
                            billingaddress = new Billingaddress(parser);
                        } else if (text == 'currency') {
                            currencyType = parser.getText();
                        } else if (text == 'nextdeliverydate') {
                            nextdeliverydate = parser.getText();
                        } else if (text == 'paymenttype') {
                            paymenttype = parser.getText();
                        } else if (text == 'plandetails') {
                            plandetails = arrayOfPlandetails(parser);
                        } else if (text == 'quantity') {
                            quantity = parser.getIntegerValue();
                        } else if (text == 'shippingaddress') {
                            shippingaddress = new Billingaddress(parser);
                        } else if (text == 'skucode') {
                            skucode = parser.getText();
                        } else if (text == 'skudisplayname') {
                            skudisplayname = parser.getText();
                        } else if (text == 'standingorderid') {
                            standingorderid = parser.getIntegerValue();
                        } else if (text == 'status') {
                            status = parser.getText();
                        } else if (text == 'subscriptionprice') {
                            subscriptionprice = parser.getText();
                        } else if (text == 'tax') {
                            tax = parser.getText();
                        } else if (text == 'total') {
                            total = parser.getText();
                        } else if (text == 'subscriptionamount') {
                            subscriptionamount = parser.getDoubleValue();
                        } else if (text == 'taxamount') {
                            taxamount = parser.getDoubleValue();
                        } else if (text == 'totalamount') {
                            totalamount = parser.getDoubleValue();
                        } else if (text == 'storecode') {
                            storecode = parser.getText();
                        }                         
                        else {
                            System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Self {
        public String type_Z {get;set;} // in json: type
        public String uri {get;set;} 
        public String href {get;set;} 
        public Self(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'type') {
                            type_Z = parser.getText();
                        } else if (text == 'uri') {
                            uri = parser.getText();
                        } else if (text == 'href') {
                            href = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Self consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static SubscriptionsResponseModel parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new SubscriptionsResponseModel (parser);
    }
    
    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT || 
                curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT ||
                curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }
    
    private static List<Plandetails> arrayOfPlandetails(System.JSONParser p) {
        List<Plandetails> res = new List<Plandetails>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Plandetails(p));
        }
        return res;
    }
    private static List<Links> arrayOfLinks(System.JSONParser p) {
        List<Links> res = new List<Links>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Links(p));
        }
        return res;
    }
    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }
    private static List<Displayvalues> arrayOfDisplayvalues(System.JSONParser p) {
        List<Displayvalues> res = new List<Displayvalues>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Displayvalues(p));
        }
        return res;
    }
}